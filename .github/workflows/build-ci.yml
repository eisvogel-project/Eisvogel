name: tests

on: [push, pull_request, workflow_dispatch]

jobs:

  code_format:
    name: "Check code formatting"
    runs-on: ubuntu-22.04
    steps:

    - name: Checkout Eisvogel repository
      uses: actions/checkout@v4

    - name: Run clang-format
      run: |
        echo "Running `clang-format --version`"
        find . -iname '*.hxx' -o -iname '*.hh' -o -iname '*.cpp' -o -iname '*.h' | xargs clang-format --dry-run --Werror --style=file

  build_and_test:
    name: "Run build and tests"
    runs-on: ubuntu-22.04
    env:
      CC: gcc-13
      CXX: g++-13

    strategy:
      fail-fast: False
      matrix:
        cmake_args: ["-DBUILD_EXAMPLES=ON -DBUILD_TESTS=ON",
                     "-DBUILD_EXAMPLES=ON -DBUILD_TESTS=ON -DBUILD_CORSIKA=ON",
                     "-DBUILD_EXAMPLES=ON -DBUILD_TESTS=ON -DBUILD_CORSIKA=ON -DBUILD_MEEP=ON"]

    steps:
    - name: Install compiler
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get -y update
        sudo apt-get install -y gcc-13 g++-13

    - name: Install dependencies
      run: |
        sudo apt-get -y update	
        sudo apt-get install -y pkg-config cmake
        sudo apt-get install -y libtbb-dev
        sudo apt-get install -y libhdf5-mpi-dev libharminv-dev libfftw3-dev libgsl-dev libgslcblas0
        sudo apt-get install -y python3-setuptools cython3 python3-matplotlib python3-mpi4py
        sudo apt-get install -y python3-meep-mpi-default libmeep-mpi-default-dev

    - name: Checkout Eisvogel repository
      uses: actions/checkout@v4

    - name: Compile Eisvogel
      run: |
        mkdir -p build &&
        pushd build &&
        cmake ${{ matrix.cmake_args }} ../ &&
        VERBOSE=1 make &&
        popd

    - name: Run C++ tests
      run: |
        pushd build &&
        ctest &&
        popd